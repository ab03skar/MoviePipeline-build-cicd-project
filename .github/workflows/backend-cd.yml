name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

jobs:
  lint:
    name: Lint Backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install Dependencies
      run: |
        cd starter/backend
        python -m pip install --upgrade pip
        pip install pipenv 
        pipenv install

    - name: Run Linter
      run: |
        cd starter/backend
        pipenv install flake8
        pipenv run lint

  test:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install Dependencies
      run: |
        cd starter/backend
        python -m pip install --upgrade pip
        pip install pipenv 
        pipenv install

    - name: Run Tests
      run: |
        cd starter/backend
        pipenv run test

  build:
    name: Build Docker Image for Backend
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build the Docker image
      run: |
        cd starter/backend
        docker build --tag 130963274747.dkr.ecr.us-east-1.amazonaws.com/backend:${{ github.sha }} .

    - name: Run the Docker image
      run: |
        docker run -p 5000:5000 --name mp-backend -d 130963274747.dkr.ecr.us-east-1.amazonaws.com/backend:${{ github.sha }}
        sleep 15
        curl http://localhost:5000/movies

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
  
    - name: Set up Kubectl
      uses: azure/setup-kubectl@v1
  
    - name: Configure kubectl context
      run: |
        aws eks update-kubeconfig --region us-east-1 --name cluster
  
    - name: Update Kubernetes manifests with new image
      run: |
        cd starter/backend/k8s
        kustomize edit set image backend=130963274747.dkr.ecr.us-east-1.amazonaws.com/backend:${{ github.sha }}
  
    - name: Deploy to Kubernetes
      run: |
        cd starter/backend/k8s
        kustomize build | kubectl apply -f -

